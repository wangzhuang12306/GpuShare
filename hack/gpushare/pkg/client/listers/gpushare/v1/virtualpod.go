/*
Copyright 2021 wz123456.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "gpushare/api/gpushare/v1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// VirtualPodLister helps list VirtualPods.
// All objects returned here must be treated as read-only.
type VirtualPodLister interface {
	// List lists all VirtualPods in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.VirtualPod, err error)
	// VirtualPods returns an object that can list and get VirtualPods.
	VirtualPods(namespace string) VirtualPodNamespaceLister
	VirtualPodListerExpansion
}

// virtualPodLister implements the VirtualPodLister interface.
type virtualPodLister struct {
	indexer cache.Indexer
}

// NewVirtualPodLister returns a new VirtualPodLister.
func NewVirtualPodLister(indexer cache.Indexer) VirtualPodLister {
	return &virtualPodLister{indexer: indexer}
}

// List lists all VirtualPods in the indexer.
func (s *virtualPodLister) List(selector labels.Selector) (ret []*v1.VirtualPod, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.VirtualPod))
	})
	return ret, err
}

// VirtualPods returns an object that can list and get VirtualPods.
func (s *virtualPodLister) VirtualPods(namespace string) VirtualPodNamespaceLister {
	return virtualPodNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// VirtualPodNamespaceLister helps list and get VirtualPods.
// All objects returned here must be treated as read-only.
type VirtualPodNamespaceLister interface {
	// List lists all VirtualPods in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.VirtualPod, err error)
	// Get retrieves the VirtualPod from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.VirtualPod, error)
	VirtualPodNamespaceListerExpansion
}

// virtualPodNamespaceLister implements the VirtualPodNamespaceLister
// interface.
type virtualPodNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all VirtualPods in the indexer for a given namespace.
func (s virtualPodNamespaceLister) List(selector labels.Selector) (ret []*v1.VirtualPod, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.VirtualPod))
	})
	return ret, err
}

// Get retrieves the VirtualPod from the indexer for a given namespace and name.
func (s virtualPodNamespaceLister) Get(name string) (*v1.VirtualPod, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("virtualpod"), name)
	}
	return obj.(*v1.VirtualPod), nil
}
